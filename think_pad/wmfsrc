#
# WMFS2 configuration file
#

# Possible file inclusion:
# @include "file"


[themes]

  [theme]
     # My sexy beautiful and amazing theme
     name = "greygreen"
     #font = "-misc-tamsyn-medium-r-normal--12-87-100-100-c-60-iso8859-1"
     font = "-*-termsyn.icons-medium-*-*-*-11-*-*-*-*-*-*-*"
     # Bars
     bars_width = 19
     bars_fg = "#CCCCCC"
     bars_bg = "#111111"
     # Element tags
     tags_normal_fg = "#7D7D7D"
     tags_normal_bg = "#222222"
     #tags_normal_statusline = ""
     tags_sel_fg = "#222222"
     tags_sel_bg = "#BDE077"
     #tags_sel_statusline = ""
     tags_occupied_fg = "#CCCCCC"
     tags_occupied_bg = "#444444"
     #tags_occupied_statusline = "*"
     tags_urgent_fg = "#7D7D7D"
     tags_urgent_bg = "#FDA53C"
     #tags_urgent_statusline = "\R[0;11;20;1;#CC0000]\R[0;0;20;1;#CC0000]"
     tags_border_color = "#050505"
     tags_border_width = 0
     # Frame / Client
     client_normal_fg = "#3C3C3C"
     client_normal_bg = "#1C1C1C"
     client_normal_statusline = "\s[right;#FDA53C; ··· Off ]"
     client_sel_fg = "#BBBBBB"
     client_sel_bg = "#242424"
     client_sel_statusline = "\s[left;#BDE077; ···] \s[right;#BDE077;··· Actif ]"
     frame_bg = "#FFFFFF"
     #client_titlebar_width = 14
     client_border_width = 1
  [/theme]
  
  [theme]
        name = "conkybar"
        font = "-*-terminus-medium-*-*-*-*-*-*-*-*-*-*-pt154"
        # Bars
        bars_width = 53
        bars_fg = "#63b8ff"
        bars_bg = "#222222"
        # Element tags
        tags_normal_fg = "#7D7D7D"
        tags_normal_bg = "#222222"
        # tags_normal_statusline = ""
        tags_sel_fg    = "#222222"
        tags_sel_bg    = "#63b8ff"
        # tags_sel_statusline = ""
        tags_occupied_fg = "#7D7D7D"
        tags_occupied_bg = "#222222"
        tags_occupied_statusline = "\R[1;0;2;4;#63b8ff]"
        tags_urgent_fg    = "#7D7D7D"
        tags_urgent_bg    = "#1A1A1A"
        tags_urgent_statusline = "\R[2;11;11;1;#CC0000]"
        tags_border_color = "#222222"
        tags_border_width = 0
        # Frame / Client
        client_normal_fg = "#7D7D7D"
        client_normal_bg = "#222222"
        client_normal_statusline = "\s[3;9;#7D7D7D;#](1;client_close)"
        client_sel_fg = "#222222"
        client_sel_bg = "#63b8ff"
        client_sel_statusline = "\s[3;9;#222222;#](1;client_close)"
        frame_bg = "#63b8ff"
        client_titlebar_width = 12
        client_border_width = 1
    [/theme]

  [theme]
     name = "blue"
     #font = "-*-urw gothic-semibold-o-*-*-17-*-100-100-p-0-ascii-*"
     #font = "-*-adobe-helvetica-bold-r-normal--12-120-75-75-p-70-iso8859-1"
     #font = "-*-sun-open look glyph-----12-120-75-75-p-113-sunolglyph-1"
     #font = "-*-dejavu sans mono-medium-r-normal--*-77-*-*-*-*-iso10646-1"
     #font = "nu"
     font = "-*-termsyn.icons-medium-*-*-*-21-*-*-*-*-*-*-*"
     # Bars
     bars_width = 17
     bars_fg = "#505050"
     bars_bg = "#050505"
     # Element tags
     tags_normal_fg = "#444444"
     tags_normal_bg = "#B3B3B3"
     #tags_normal_statusline = ""
     tags_sel_fg = "#444444"
     tags_sel_bg = "#0033ff"
     #tags_sel_statusline = ""
     tags_occupied_fg = "#444444"
     tags_occupied_bg = "#00ccff"
     #tags_occupied_statusline = "\R[0;11;20;1;#63b8ff]"
     tags_urgent_fg = "#bdbd8a"
     tags_urgent_bg = "#050505"
     #tags_urgent_statusline = "\R[0;11;20;1;#CC0000]\R[0;1;20;1;#CC0000]"
     tags_border_color = "#444444"
     tags_border_width = 2.5
     # Frame / Client
     client_normal_fg = "#050505"
     client_normal_bg = "#B3B3B3"
     #client_normal_statusline = "\s[3;9;#7D7D7D;#](1;client_close)"
     client_sel_fg = "#050505"
     client_sel_bg = "#00ccff"
     #client_sel_statusline = "\s[3;9;#222222;#](1;client_close)"
     frame_bg = "#63b8ff"
     client_titlebar_width = 11
     client_border_width = 1
  [/theme]

[/themes]


[bars]

  # Position:
  #
  # 0  Top
  # 1  Bottom
  # 2  Hide

  # Element type:
  #
  # t  Tags
  # s  Statustext (will take available space)
  # y  Systray (can be set only ONE time among all element)
  # l  Launcher (will be expended at launcher use)

  [bar]
     name = testbar
     position = 0
     screen = 0
     elements = "tlsy"   # element order in bar
     theme = "blue"
  [/bar]

  [bar]
     name = bottom
     position = 1
     screen = 0
     elements = "s"   # element order in bar
     theme = "blue"
  [/bar]


# [bar]
#    position = 0
#    screen = 1
#    elements = "ts"
#    theme = "default"
# [/bar]

[/bars]


[tags]

  # Use no screen option or screen = -1 to set tag on each screen
  [tag]
      screen = -1
      name = " AON "
      # statusline=""
  [/tag]

  [tag] name = " DÓ " [/tag]
  [tag] name = " TRÍ " [/tag]
  [tag] name = " CEATHAIR " [/tag]
  [tag] name = " CÚIG " [/tag]
  [tag] name = " SÉ " [/tag]
  [tag] name = " SEACHT " [/tag]


  # Mousebinds associated to Tags element button
  [mouse] button = "1" func = "tag_click" [/mouse]
  [mouse] button = "4" func = "tag_next"  [/mouse]
  [mouse] button = "5" func = "tag_prev"  [/mouse]


[/tags]


[client]

  theme = "blue"
  key_modifier = "Super"

  [mouse] button = "1" func = "client_focus_click"    [/mouse]
  [mouse] button = "1" func = "mouse_swap"            [/mouse]
  [mouse] button = "2" func = "mouse_tab"             [/mouse]
  [mouse] button = "3" func = "mouse_resize"          [/mouse]
  [mouse] button = "4" func = "client_focus_next_tab" [/mouse]
  [mouse] button = "5" func = "client_focus_prev_tab" [/mouse]

[/client]

[rules]

  [rule]
      # use instance = "*" for a all-clients rule
      instance = "chromium"

      # role   = ""
      # name   = ""
      # theme  = "default"

      tag    = 1  # 2nd tag
      screen = 0

      free       = false
      tab        = false
      ignore_tag = false
  [/rule]

[/rules]

[launchers]

  # command can be an uicb function or an uicb function + extension (see example)
  [launcher]
     name = "exec"
     prompt = "Run:"

     # Example of uicb + ext:
     #   command = "spawn xterm -e"
     command = "spawn"

     width = 150
  [/launcher]

[/launchers]

[keys]

  [key] mod = {"Super"} key = "Return" func = "spawn" cmd = "urxvt" [/key]
  [key] mod = {"Super"} key = "z" func = "spawn" cmd = "firefox" [/key]
  [key] mod = {"Super"} key = "x" func = "spawn" cmd = "spacefm" [/key]
  [key] mod = {"Super"} key = "c" func = "spawn" cmd = "deluge" [/key]
  [key] mod = {"Super"} key = "v" func = "spawn" cmd = "urxvt -e mocp" [/key]
  [key] mod = {"Super"} key = "b" func = "spawn" cmd = "pycharm" [/key]
  [key] mod = {"Super"} key = "m" func = "spawn" cmd = "midori" [/key]
  [key] mod = {"Super"} key = "n" func = "spawn" cmd = "urxvt -e sudo netgui" [/key]
  [key] mod = {"Super"} key = "r" func = "spawn" cmd = "urxvt -e ranger" [/key]
  [key] mod = {"Super"} key = "f" func = "spawn" cmd = "urxvt -e finch" [/key]
  [key] mod = {"Super"} key = "o" func = "spawn" cmd = "urxvt -e sudo shutdown now" [/key]
  [key] mod = {"Super"} key = "i" func = "spawn" cmd = "urxvt -e sudo shutdown -r now" [/key]

  [key] mod = {"Control", "Alt"} key = "q" func = "quit" [/key]
  [key] mod = {"Control", "Alt"} key = "r" func = "reload" [/key]

  # Tag manipulation
  [key] mod = {"Super"} key = "F1" func = "tag_set" cmd = "0" [/key]
  [key] mod = {"Super"} key = "F2" func = "tag_set" cmd = "1" [/key]
  [key] mod = {"Super"} key = "F3" func = "tag_set" cmd = "2" [/key]
  [key] mod = {"Super"} key = "F4" func = "tag_set" cmd = "3" [/key]
  [key] mod = {"Super"} key = "F5" func = "tag_set" cmd = "4" [/key]
  [key] mod = {"Super"} key = "F6" func = "tag_set" cmd = "5" [/key]
  [key] mod = {"Super"} key = "F7" func = "tag_set" cmd = "6" [/key]
  [key] mod = {"Super"} key = "F8" func = "tag_set" cmd = "7" [/key]

  [key] mod = {"Super", "Shift"} key = "F1" func = "tag_client" cmd = "0" [/key]
  [key] mod = {"Super", "Shift"} key = "F2" func = "tag_client" cmd = "1" [/key]
  [key] mod = {"Super", "Shift"} key = "F3" func = "tag_client" cmd = "2" [/key]
  [key] mod = {"Super", "Shift"} key = "F4" func = "tag_client" cmd = "3" [/key]
  [key] mod = {"Super", "Shift"} key = "F5" func = "tag_client" cmd = "4" [/key]
  [key] mod = {"Super", "Shift"} key = "F6" func = "tag_client" cmd = "5" [/key]
  [key] mod = {"Super", "Shift"} key = "F7" func = "tag_client" cmd = "6" [/key]
  [key] mod = {"Super", "Shift"} key = "F8" func = "tag_client" cmd = "7" [/key]

  [key] mod = {"Super"} key = "minus" func = "tag_del" [/key]
  [key] mod = {"Super", "Shift"} key = "minus" func = "tag_new" [/key]

  # tag function: cmd = nameofthetag
  #[key] mod = {"Super"} key = "z" func = "tag" cmd = "2" [/key]

  [key] mod = {"Control"} key = "Right" func = "tag_next" [/key]
  [key] mod = {"Control"} key = "Left"  func = "tag_prev" [/key]

  [key] mod = {"Control"} key = "Up"  func = "screen_next" [/key]
  [key] mod = {"Control"} key = "Down" func = "screen_prev" [/key]

  [key] mod = {"Super"} key = "q" func = "client_close" [/key]

  # Focus next / prev client and next / prev tabbed client
  [key] mod = { "Alt" }            key = "Tab" func = "client_focus_next" [/key]
  [key] mod = { "Alt", "Shift" }   key = "Tab" func = "client_focus_prev" [/key]
  [key] mod = { "Super" }          key = "Tab" func = "client_focus_next_tab" [/key]
  [key] mod = { "Super", "Shift" } key = "Tab" func = "client_focus_prev_tab" [/key]

  # Focus next client with direction
  [key] mod = {"Alt"} key = "h" func = "client_focus_left"   [/key]
  [key] mod = {"Alt"} key = "l" func = "client_focus_right"  [/key]
  [key] mod = {"Alt"} key = "k" func = "client_focus_top"    [/key]
  [key] mod = {"Alt"} key = "j" func = "client_focus_bottom" [/key]

  # swap next client with direction:
  [key] mod = {"Control", "Shift"} key = "h" func = "client_swap_left"   [/key]
  [key] mod = {"Control", "Shift"} key = "l" func = "client_swap_right"  [/key]
  [key] mod = {"Control", "Shift"} key = "k" func = "client_swap_top"    [/key]
  [key] mod = {"Control", "Shift"} key = "j" func = "client_swap_bottom" [/key]

  # Resize selected tiled client with direction
  [key] mod = {"Super"} key = "h" func = "client_resize_left"   cmd = "20" [/key]
  [key] mod = {"Super"} key = "l" func = "client_resize_left"   cmd = "-20" [/key]
  [key] mod = {"Super"} key = "k" func = "client_resize_top"    cmd = "20" [/key]
  [key] mod = {"Super"} key = "j" func = "client_resize_top"    cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "h" func = "client_resize_right"  cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "l" func = "client_resize_right"  cmd = "20" [/key]
  [key] mod = {"Super", "Control"} key = "k" func = "client_resize_bottom" cmd = "-20" [/key]
  [key] mod = {"Super", "Control"} key = "j" func = "client_resize_bottom" cmd = "20" [/key]

  # Tabbing command
  [key] mod = {"Alt", "Shift"} key = "h" func = "client_tab_left"   [/key]
  [key] mod = {"Alt", "Shift"} key = "l" func = "client_tab_right"  [/key]
  [key] mod = {"Alt", "Shift"} key = "k" func = "client_tab_top"    [/key]
  [key] mod = {"Alt", "Shift"} key = "j" func = "client_tab_bottom" [/key]
  [key] mod = {"Alt", "Shift"} key = "u" func = "client_untab" [/key]
  [key] mod = {"Super"}        key = "t" func = "client_tab_next_opened" [/key]

  # Layout manipulation
  [key] mod = {"Super"}          key = "m" func = "layout_vmirror" [/key]
  [key] mod = {"Super", "Shift"} key = "m" func = "layout_hmirror" [/key]
  [key] mod = {"Super"}          key = "r" func = "layout_rotate_right" [/key]
  [key] mod = {"Super", "Shift"} key = "r" func = "layout_rotate_left" [/key]

  [key] mod = {"Control", "Super", "Alt"} key = "h" func = "layout_integrate_left" [/key]
  [key] mod = {"Control", "Super", "Alt"} key = "j" func = "layout_integrate_bottom" [/key]
  [key] mod = {"Control", "Super", "Alt"} key = "k" func = "layout_integrate_top" [/key]
  [key] mod = {"Control", "Super", "Alt"} key = "l" func = "layout_integrate_right" [/key]

  # Layout set historic travelling function (TESTING)
  [key] mod = {"Super"} key = "o" func = "layout_prev_set" [/key]
  [key] mod = {"Super", "Shift"} key = "o" func = "layout_next_set" [/key]

  # Toggle client free/tile
  [key] mod = {"Super"} key = "f" func = "client_toggle_free" [/key]

  # Toggle client ignore_tag
  [key] mod = {"Super", "Shift"} key = "f" func = "client_toggle_ignore_tag" [/key]

  # Toggle infobar visibility
  [key] mod = {"Super", "Shift"} key = "h" func = "infobar_toggle_hide" cmd = "default" [/key]

  # Launcher
  [key] mod = {"Super"} key = "p" func = "launcher" cmd = "exec" [/key]

[/keys]

[root]
	# Command you can execute to set the background.
	background_command = "$HOME/.config/wmfs/wmfs2_status_positionbar.sh"
[/root]
